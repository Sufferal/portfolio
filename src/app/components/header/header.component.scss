#header {
  background-color: var(--primary-color);

  width: 100vw;
  height: 95vh;
  justify-content: flex-start;
}

.header {
  &-title {
    font-size: 5.5rem;
    color: var(--secondary-color);
    margin-bottom: 5rem;
    margin-top: 10rem;
    max-width: 50vw;
  }

  &-subtitle {
    font-size: 2.5rem;
    color: var(--secondary-color);
    font-weight: normal;
    line-height: 1.5;
    max-width: 35vw;
  }
}

.particle-container {
  $particleWidth: 10px;
  $particleNum: 200;
  $particleColor: hsl(61, 100%, 51%);

  position: absolute;
  transform: translateY(-10vh);
  animation-iteration-count: infinite;
  animation-timing-function: linear;

  .particle {
    width: 100%;
    height: 100%;
    border-radius: 50%;
    mix-blend-mode: screen;
    background-image: radial-gradient(
      $particleColor,
      $particleColor 10%,
      hsla(180, 100%, 80%, 0) 56%
    );

    animation: fadein-frames 200ms infinite, scale-frames 2s infinite;

    @keyframes fade-frames {
      0% {
        opacity: 1;
      }

      50% {
        opacity: 0.7;
      }

      100% {
        opacity: 1;
      }
    }

    @keyframes scale-frames {
      0% {
        transform: scale3d(0.4, 0.4, 1);
      }

      50% {
        transform: scale3d(2.2, 2.2, 1);
      }

      100% {
        transform: scale3d(0.4, 0.4, 1);
      }
    }
  }

  @for $i from 1 through $particleNum {
    &:nth-child(#{$i}) {
      $particleSize: random($particleWidth);
      width: $particleSize + px;
      height: $particleSize + px;

      $startPositionY: random(10) + 100;
      $framesName: "move-frames-" + $i;
      $moveDuration: 7000 + random(4000) + ms;

      animation-name: #{$framesName};
      animation-duration: $moveDuration;
      animation-delay: random(11000) + ms;

      @keyframes #{$framesName} {
        from {
          transform: translate3d(
            #{random(100) + vw},
            #{$startPositionY + vh},
            0
          );
        }
        
        to {
          transform: translate3d(
            #{random(100) + vw},
            #{- $startPositionY - random(30) + vh},
            0
          );
        }
      }

      .particle {
        animation-delay: random(4000) + ms;
      }
    }
  }
}
